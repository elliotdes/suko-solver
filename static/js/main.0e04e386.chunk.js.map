{"version":3,"sources":["Components/Grid.js","Components/Sum.js","Components/QuadSum.js","Suko.js","App.js","reportWebVitals.js","index.js"],"names":["Square","_ref","value","color","row","col","onChange","onClick","react_default","a","createElement","className","type","e","target","style","backgroundColor","Grid","props","grid","map","i","key","j","colors","Sum","initialValue","_useState","useState","_useState2","Object","slicedToArray","setValue","newValue","QuadSum","quads","coords","handleChange","checkSolution","quad","colorSums","arr","flat","uniqueElements","Set","length","has","add","checkUniqueGrid","orangeSum","blueSum","greenSum","checkColorSums","quadSums","quad_flat","checkQuadSums","App","setGrid","_useState3","_useState4","setQuad","_useState5","_useState6","setColors","_useState7","_useState8","setGreenSum","_useState9","_useState10","setBlueSum","_useState11","_useState12","setOrangeSum","_useState13","_useState14","selectedColor","setSelectedColor","colorSum","#FFA07A","#87CEFA","#7FFFAA","handleQuadChange","newQuad","toConsumableArray","handleSumChange","handleColorSumClick","Components_Grid","newGrid","parseInt","newColors","Components_QuadSum","Components_Sum","alert","solution","options","permutations","permute","m","arguments","undefined","push","curr","slice","next","splice","concat","getPermutations","possible_grid","getSolution","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.0e04e386.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Square({ value, color, row, col, onChange, onClick }) {\n  const handleChange = (e) => {\n    const value = e.target.value;\n    onChange(row, col, value);\n  };\n\n  const handleClick = () => {\n    onClick(row, col);\n  };\n\n  return (\n    <td onClick={handleClick}>\n      <input\n        className=\"square\"\n        type=\"number\"\n        value={value}\n        onChange={handleChange}\n        style={{\n          backgroundColor: color,\n        }}\n      />\n    </td>\n  );\n}\n\nconst Grid = (props) => {\n  return (\n    <table className=\"grid\">\n      <tbody>\n        {props.grid.map((row, i) => (\n          <tr key={i}>\n            {row.map((col, j) => (\n              <Square\n                key={j}\n                value={props.grid[i][j]}\n                color={props.colors[i][j]}\n                row={i}\n                col={j}\n                onChange={props.onChange}\n                onClick={props.onClick}\n              />\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\nexport default Grid;\n","import React, { useState } from \"react\";\n\nconst Sum = ({ color, initialValue, onChange, onClick }) => {\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = (e) => {\n    const newValue = e.target.value;\n    setValue(newValue);\n    onChange(color, newValue);\n  };\n\n  const handleClick = () => {\n    onClick(color);\n  };\n\n  return (\n    <input\n      className=\"sum\"\n      type=\"number\"\n      value={value}\n      onChange={handleChange}\n      onClick={handleClick}\n      style={{\n        backgroundColor: color,\n      }}\n    />\n  );\n};\n\nexport default Sum;\n","import React from \"react\";\n\nconst QuadSum = (props) => {\n  const handleChange = (e) => {\n    props.onChange(props.coords[1], props.coords[0], e.target.value);\n  };\n\n  return (\n    <input\n      className={props.className}\n      type=\"number\"\n      value={props.quads[props.coords[1]][props.coords[0]]}\n      onChange={(e) => handleChange(e)}\n    />\n  );\n};\n\nexport default QuadSum;\n","// Checking\n\nfunction checkColorSums(grid, colors, colorSums) {\n  let orangeSum = 0;\n  let blueSum = 0;\n  let greenSum = 0;\n  for (let i = 0; i < grid.length; i++) {\n    for (let j = 0; j < grid[i].length; j++) {\n      if (colors[i][j] === \"#FFA07A\") {\n        orangeSum += grid[i][j];\n      } else if (colors[i][j] === \"#87CEFA\") {\n        blueSum += grid[i][j];\n      } else if (colors[i][j] === \"#7FFFAA\") {\n        greenSum += grid[i][j];\n      }\n    }\n  }\n  if (\n    orangeSum === colorSums[\"#FFA07A\"] &&\n    blueSum === colorSums[\"#87CEFA\"] &&\n    greenSum === colorSums[\"#7FFFAA\"]\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction checkQuadSums(grid, quad) {\n  const quadSums = [\n    grid[0][0] + grid[0][1] + grid[1][0] + grid[1][1],\n    grid[0][1] + grid[0][2] + grid[1][1] + grid[1][2],\n    grid[1][0] + grid[1][1] + grid[2][0] + grid[2][1],\n    grid[1][1] + grid[1][2] + grid[2][1] + grid[2][2],\n  ];\n  const quad_flat = quad.flat();\n  for (let i = 0; i < quad_flat.length; i++) {\n    if (quadSums[i] !== quad_flat[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction checkUniqueGrid(grid) {\n  // create a set to store unique elements\n  const arr = grid.flat();\n  let uniqueElements = new Set();\n  for (let i = 0; i < arr.length; i++) {\n    // check if element is between 1 and 9\n    if (arr[i] < 1 || arr[i] > 9) {\n      return false;\n    }\n    if (uniqueElements.has(arr[i])) {\n      return false;\n    }\n    uniqueElements.add(arr[i]);\n  }\n  return true;\n}\n\n// Solving\n\nfunction convertTo3x3(arr) {\n  return [arr.slice(0, 3), arr.slice(3, 6), arr.slice(6)];\n}\n\nfunction getPermutations(arr) {\n  let permutations = [];\n  function permute(arr, m = []) {\n    if (arr.length === 0) {\n      permutations.push(m);\n    } else {\n      for (let i = 0; i < arr.length; i++) {\n        let curr = arr.slice();\n        let next = curr.splice(i, 1);\n        permute(curr.slice(), m.concat(next));\n      }\n    }\n  }\n  permute(arr);\n  return permutations;\n}\n\n// Exports\n\nexport function checkSolution(grid, colors, quad, colorSums) {\n  if (\n    checkUniqueGrid(grid) &&\n    checkColorSums(grid, colors, colorSums) &&\n    checkQuadSums(grid, quad)\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport function getSolution(colors, quad, colorSums) {\n  const options = getPermutations([1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  for (let i = 0; i < options.length; i++) {\n    const possible_grid = convertTo3x3(options[i]);\n    if (checkSolution(possible_grid, colors, quad, colorSums)) {\n      return possible_grid;\n    }\n  }\n  return false;\n}\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Grid from \"./Components/Grid\";\nimport Sum from \"./Components/Sum\";\nimport QuadSum from \"./Components/QuadSum\";\nimport { checkSolution, getSolution } from \"./Suko\";\n\nfunction App() {\n  const [grid, setGrid] = useState([\n    [0, 0, 0],\n    [0, 0, 0],\n    [0, 0, 0],\n  ]);\n  const [quad, setQuad] = useState([\n    [17, 15],\n    [21, 21],\n  ]);\n  const [colors, setColors] = useState([\n    [\"#FFA07A\", \"#87CEFA\", \"#87CEFA\"],\n    [\"#FFA07A\", \"#87CEFA\", \"#7FFFAA\"],\n    [\"#7FFFAA\", \"#7FFFAA\", \"#7FFFAA\"],\n  ]);\n  const [greenSum, setGreenSum] = useState(24);\n  const [blueSum, setBlueSum] = useState(12);\n  const [orangeSum, setOrangeSum] = useState(9);\n  const [selectedColor, setSelectedColor] = useState(null);\n\n  const colorSum = {\n    \"#FFA07A\": orangeSum,\n    \"#87CEFA\": blueSum,\n    \"#7FFFAA\": greenSum,\n  };\n\n  const handleChange = (row, col, value) => {\n    const newGrid = [...grid];\n    newGrid[row][col] = value === \"\" ? \"\" : parseInt(value);\n    setGrid(newGrid);\n  };\n\n  const handleQuadChange = (row, col, value) => {\n    const newQuad = [...quad];\n    newQuad[row][col] = value;\n    setQuad(newQuad);\n  };\n\n  const handleSumChange = (color, newValue) => {\n    if (color === \"#FFA07A\") {\n      setOrangeSum(newValue);\n    } else if (color === \"#87CEFA\") {\n      setBlueSum(newValue);\n    } else if (color === \"#7FFFAA\") {\n      setGreenSum(newValue);\n    }\n  };\n\n  const handleColorSumClick = (color) => {\n    setSelectedColor(color);\n  };\n\n  const handleSquareClick = (row, col) => {\n    if (selectedColor) {\n      const newColors = [...colors];\n      newColors[row][col] = selectedColor;\n      setColors(newColors);\n      setSelectedColor(null);\n    }\n  };\n\n  const handleClick = () => {\n    const check = checkSolution(grid, colors, quad, colorSum);\n    if (check) {\n      alert(\"That is correct!\");\n    } else {\n      alert(\"That is incorrect.\");\n    }\n  };\n\n  const handleSolve = () => {\n    const solution = getSolution(colors, quad, colorSum);\n    if (solution) {\n      setGrid(solution);\n    } else {\n      alert(\"No solution found!\");\n    }\n  };\n  const handleReset = () => {\n    setGrid([\n      [0, 0, 0],\n      [0, 0, 0],\n      [0, 0, 0],\n    ]);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Suko Solver</h1>\n      </header>\n      <div className=\"grid-container\">\n        <Grid\n          grid={grid}\n          colors={colors}\n          onChange={handleChange}\n          onClick={handleSquareClick}\n        ></Grid>\n        <QuadSum\n          className=\"nw\"\n          onChange={handleQuadChange}\n          quads={quad}\n          coords={[0, 0]}\n        />\n        <QuadSum\n          className=\"ne\"\n          onChange={handleQuadChange}\n          quads={quad}\n          coords={[1, 0]}\n        />\n        <QuadSum\n          className=\"se\"\n          onChange={handleQuadChange}\n          quads={quad}\n          coords={[0, 1]}\n        />\n        <QuadSum\n          className=\"sw\"\n          onChange={handleQuadChange}\n          quads={quad}\n          coords={[1, 1]}\n        />\n      </div>\n      <div className=\"sum-container\">\n        <Sum\n          color=\"#7FFFAA\"\n          initialValue={greenSum}\n          onChange={handleSumChange}\n          onClick={handleColorSumClick}\n        />\n        <Sum\n          color=\"#87CEFA\"\n          initialValue={blueSum}\n          onChange={handleSumChange}\n          onClick={handleColorSumClick}\n        />\n        <Sum\n          color=\"#FFA07A\"\n          initialValue={orangeSum}\n          onChange={handleSumChange}\n          onClick={handleColorSumClick}\n        />\n      </div>\n      <div>\n        <button onClick={handleClick}>Check</button>\n        <button onClick={handleSolve}>Solve</button>\n        <button onClick={handleReset}>Reset</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}